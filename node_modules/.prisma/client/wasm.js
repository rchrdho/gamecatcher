
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  passwordHash: 'passwordHash',
  googleId: 'googleId',
  displayName: 'displayName',
  profilePictureId: 'profilePictureId',
  emailVerified: 'emailVerified',
  birthDate: 'birthDate',
  registrationDate: 'registrationDate'
};

exports.Prisma.GameScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  releaseDate: 'releaseDate',
  coverImageId: 'coverImageId',
  userId: 'userId'
};

exports.Prisma.ImageScalarFieldEnum = {
  id: 'id',
  url: 'url',
  checksum: 'checksum',
  width: 'width',
  height: 'height',
  uploadedAt: 'uploadedAt',
  uploadedById: 'uploadedById'
};

exports.Prisma.ReviewScalarFieldEnum = {
  id: 'id',
  rating: 'rating',
  content: 'content',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId',
  gameId: 'gameId'
};

exports.Prisma.ReviewCommentScalarFieldEnum = {
  id: 'id',
  content: 'content',
  createdAt: 'createdAt',
  reviewId: 'reviewId',
  userId: 'userId'
};

exports.Prisma.GameUserScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  gameId: 'gameId',
  progress: 'progress'
};

exports.Prisma.GameStatusScalarFieldEnum = {
  id: 'id',
  type: 'type',
  userId: 'userId'
};

exports.Prisma.UserTagScalarFieldEnum = {
  id: 'id',
  label: 'label'
};

exports.Prisma.GameTagScalarFieldEnum = {
  id: 'id',
  label: 'label'
};

exports.Prisma.ReviewUserTagScalarFieldEnum = {
  id: 'id',
  label: 'label',
  reviewId: 'reviewId',
  userId: 'userId'
};

exports.Prisma.DeveloperScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.PublisherScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.GameImageScalarFieldEnum = {
  id: 'id',
  url: 'url',
  gameId: 'gameId'
};

exports.Prisma.AchievementScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  gameId: 'gameId'
};

exports.Prisma.AchievementUnlockScalarFieldEnum = {
  id: 'id',
  unlockedAt: 'unlockedAt',
  userId: 'userId',
  achievementId: 'achievementId'
};

exports.Prisma.EmailChangeScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  newEmail: 'newEmail',
  token: 'token',
  createdAt: 'createdAt'
};

exports.Prisma.EmailVerificationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  token: 'token',
  createdAt: 'createdAt',
  expiresAt: 'expiresAt'
};

exports.Prisma.PasswordResetScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  token: 'token',
  createdAt: 'createdAt',
  expiresAt: 'expiresAt'
};

exports.Prisma.FriendshipScalarFieldEnum = {
  id: 'id',
  senderId: 'senderId',
  receiverId: 'receiverId',
  status: 'status',
  createdAt: 'createdAt'
};

exports.Prisma.UserGroupScalarFieldEnum = {
  id: 'id',
  name: 'name',
  role: 'role'
};

exports.Prisma.GenreScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.PlatformScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.ProgressStatus = exports.$Enums.ProgressStatus = {
  WISHLIST: 'WISHLIST',
  PLAYING: 'PLAYING',
  COMPLETED: 'COMPLETED',
  ON_HOLD: 'ON_HOLD',
  DROPPED: 'DROPPED',
  REPLAYING: 'REPLAYING'
};

exports.GameStatusType = exports.$Enums.GameStatusType = {
  UPCOMING: 'UPCOMING',
  TRENDING: 'TRENDING',
  TOP: 'TOP',
  CLASSIC: 'CLASSIC',
  NEW_RELEASE: 'NEW_RELEASE'
};

exports.FriendshipStatus = exports.$Enums.FriendshipStatus = {
  PENDING: 'PENDING',
  ACCEPTED: 'ACCEPTED',
  REJECTED: 'REJECTED',
  BLOCKED: 'BLOCKED'
};

exports.Prisma.ModelName = {
  User: 'User',
  Game: 'Game',
  Image: 'Image',
  Review: 'Review',
  ReviewComment: 'ReviewComment',
  GameUser: 'GameUser',
  GameStatus: 'GameStatus',
  UserTag: 'UserTag',
  GameTag: 'GameTag',
  ReviewUserTag: 'ReviewUserTag',
  Developer: 'Developer',
  Publisher: 'Publisher',
  GameImage: 'GameImage',
  Achievement: 'Achievement',
  AchievementUnlock: 'AchievementUnlock',
  EmailChange: 'EmailChange',
  EmailVerification: 'EmailVerification',
  PasswordReset: 'PasswordReset',
  Friendship: 'Friendship',
  UserGroup: 'UserGroup',
  Genre: 'Genre',
  Platform: 'Platform'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/richard/Desktop/Personal Projects/gamecatcher/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/richard/Desktop/Personal Projects/gamecatcher/prisma/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id               Int       @id @default(autoincrement())\n  email            String    @unique\n  passwordHash     String?\n  googleId         String?   @unique\n  displayName      String\n  profilePicture   Image?    @relation(fields: [profilePictureId], references: [id], onDelete: SetNull)\n  profilePictureId Int?\n  emailVerified    Boolean   @default(false)\n  birthDate        DateTime?\n  registrationDate DateTime  @default(dbgenerated(\"timezone('UTC'::text, now())\"))\n\n  emailChanges       EmailChange[]\n  emailVerifications EmailVerification[]\n  passwordResets     PasswordReset[]\n\n  playedGames Game[]\n  favourites  Game[] @relation(\"favouritedGames\")\n\n  sentFriendRequests     Friendship[] @relation(\"sent_friendship_requests\")\n  receivedFriendRequests Friendship[] @relation(\"received_friendship_requests\")\n  groups                 UserGroup[]\n\n  reviews      Review[]\n  reviewTags   ReviewUserTag[]\n  userTags     UserTag[]\n  gameStatuses GameStatus[]\n\n  achievements   AchievementUnlock[]\n  uploadedImages Image[]             @relation(\"user_uploaded_images\")\n  ReviewComment  ReviewComment[]\n  GameUser       GameUser[]\n\n  @@index([displayName])\n}\n\nmodel Game {\n  id          Int       @id @default(autoincrement())\n  title       String\n  description String?\n  releaseDate DateTime?\n\n  coverImageId Int?\n  coverImage   Image? @relation(fields: [coverImageId], references: [id], onDelete: SetNull)\n\n  reviews      Review[]\n  users        GameUser[]\n  favouritedBy User[]     @relation(\"favouritedGames\")\n\n  genres    Genre[]      @relation(\"game_genres\")\n  platforms Platform[]   @relation(\"game_platforms\")\n  tags      GameTag[]\n  statuses  GameStatus[] @relation(\"game_statuses\")\n\n  developers   Developer[]   @relation(\"game_developers\")\n  publishers   Publisher[]   @relation(\"game_publishers\")\n  images       GameImage[]\n  achievements Achievement[]\n  User         User?         @relation(fields: [userId], references: [id])\n  userId       Int?\n\n  @@unique([title, releaseDate])\n  @@index([title])\n}\n\nmodel Image {\n  id         Int      @id @default(autoincrement())\n  url        String\n  checksum   String   @unique\n  width      Int?\n  height     Int?\n  uploadedAt DateTime @default(now())\n\n  uploadedById Int?\n  uploadedBy   User? @relation(\"user_uploaded_images\", fields: [uploadedById], references: [id], onDelete: SetNull)\n\n  games Game[]\n  User  User[]\n\n  @@index([uploadedAt])\n}\n\nmodel Review {\n  id        Int      @id @default(autoincrement())\n  rating    Int // 1–10\n  content   String?\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  userId Int\n  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  gameId Int\n  game   Game @relation(fields: [gameId], references: [id], onDelete: Cascade)\n\n  tags     ReviewUserTag[]\n  comments ReviewComment[]\n\n  @@unique([userId, gameId]) // One review per user per game\n  @@index([userId])\n  @@index([gameId])\n}\n\nmodel ReviewComment {\n  id        Int      @id @default(autoincrement())\n  content   String\n  createdAt DateTime @default(now())\n\n  reviewId Int\n  review   Review @relation(fields: [reviewId], references: [id], onDelete: Cascade)\n\n  userId Int\n  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([reviewId])\n  @@index([userId])\n}\n\nmodel GameUser {\n  id       Int            @id @default(autoincrement())\n  userId   Int\n  gameId   Int\n  progress ProgressStatus @default(WISHLIST)\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n  game Game @relation(fields: [gameId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, gameId]) // prevent duplicate game-user relations\n  @@index([progress])\n}\n\nenum ProgressStatus {\n  WISHLIST\n  PLAYING\n  COMPLETED\n  ON_HOLD\n  DROPPED\n  REPLAYING\n}\n\nmodel GameStatus {\n  id     Int            @id @default(autoincrement())\n  type   GameStatusType\n  games  Game[]         @relation(\"game_statuses\")\n  userId Int\n  user   User           @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, type]) // each user can only assign one status per type\n}\n\nenum GameStatusType {\n  UPCOMING\n  TRENDING\n  TOP\n  CLASSIC\n  NEW_RELEASE\n}\n\nmodel UserTag {\n  id    Int    @id @default(autoincrement())\n  label String @unique\n\n  users User[]\n}\n\nmodel GameTag {\n  id    Int    @id @default(autoincrement())\n  label String @unique\n\n  games Game[]\n}\n\nmodel ReviewUserTag {\n  id    Int    @id @default(autoincrement())\n  label String\n\n  reviewId Int\n  review   Review @relation(fields: [reviewId], references: [id], onDelete: Cascade)\n\n  userId Int\n  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([reviewId, userId, label])\n}\n\nmodel Developer {\n  id    Int    @id @default(autoincrement())\n  name  String @unique\n  games Game[] @relation(\"game_developers\")\n}\n\nmodel Publisher {\n  id    Int    @id @default(autoincrement())\n  name  String @unique\n  games Game[] @relation(\"game_publishers\")\n}\n\nmodel GameImage {\n  id     Int    @id @default(autoincrement())\n  url    String\n  gameId Int\n  game   Game   @relation(fields: [gameId], references: [id], onDelete: Cascade)\n\n  @@index([gameId])\n}\n\nmodel Achievement {\n  id          Int                 @id @default(autoincrement())\n  title       String\n  description String?\n  gameId      Int\n  game        Game                @relation(fields: [gameId], references: [id], onDelete: Cascade)\n  unlocks     AchievementUnlock[]\n\n  @@unique([gameId, title]) // no duplicate achievement titles per game\n}\n\nmodel AchievementUnlock {\n  id         Int      @id @default(autoincrement())\n  unlockedAt DateTime @default(now())\n\n  userId Int\n  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  achievementId Int\n  achievement   Achievement @relation(fields: [achievementId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, achievementId]) // user cannot unlock same achievement twice\n}\n\nmodel EmailChange {\n  id        Int      @id @default(autoincrement())\n  userId    Int\n  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n  newEmail  String\n  token     String   @unique\n  createdAt DateTime @default(now())\n\n  @@index([userId])\n}\n\nmodel EmailVerification {\n  id        Int      @id @default(autoincrement())\n  userId    Int\n  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n  token     String   @unique\n  createdAt DateTime @default(now())\n  expiresAt DateTime\n\n  @@index([userId])\n}\n\nmodel PasswordReset {\n  id        Int      @id @default(autoincrement())\n  userId    Int\n  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n  token     String   @unique\n  createdAt DateTime @default(now())\n  expiresAt DateTime\n\n  @@index([userId])\n}\n\nmodel Friendship {\n  id         Int              @id @default(autoincrement())\n  senderId   Int\n  receiverId Int\n  status     FriendshipStatus @default(PENDING)\n  createdAt  DateTime         @default(now())\n\n  sender   User @relation(\"sent_friendship_requests\", fields: [senderId], references: [id], onDelete: Cascade)\n  receiver User @relation(\"received_friendship_requests\", fields: [receiverId], references: [id], onDelete: Cascade)\n\n  @@unique([senderId, receiverId]) // prevent duplicate friendships\n  @@index([status])\n}\n\nenum FriendshipStatus {\n  PENDING\n  ACCEPTED\n  REJECTED\n  BLOCKED\n}\n\nmodel UserGroup {\n  id   Int    @id @default(autoincrement())\n  name String\n  role String @default(\"member\")\n\n  users User[]\n\n  @@unique([name])\n}\n\nmodel Genre {\n  id    Int    @id @default(autoincrement())\n  name  String @unique\n  games Game[] @relation(\"game_genres\")\n}\n\nmodel Platform {\n  id    Int    @id @default(autoincrement())\n  name  String @unique\n  games Game[] @relation(\"game_platforms\")\n}\n",
  "inlineSchemaHash": "a32a6b49567fb256a23355c89628710f16626aa73259a232749b4f1146c05fbe",
  "copyEngine": false
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"googleId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"displayName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profilePicture\",\"kind\":\"object\",\"type\":\"Image\",\"relationName\":\"ImageToUser\"},{\"name\":\"profilePictureId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"birthDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"registrationDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"emailChanges\",\"kind\":\"object\",\"type\":\"EmailChange\",\"relationName\":\"EmailChangeToUser\"},{\"name\":\"emailVerifications\",\"kind\":\"object\",\"type\":\"EmailVerification\",\"relationName\":\"EmailVerificationToUser\"},{\"name\":\"passwordResets\",\"kind\":\"object\",\"type\":\"PasswordReset\",\"relationName\":\"PasswordResetToUser\"},{\"name\":\"playedGames\",\"kind\":\"object\",\"type\":\"Game\",\"relationName\":\"GameToUser\"},{\"name\":\"favourites\",\"kind\":\"object\",\"type\":\"Game\",\"relationName\":\"favouritedGames\"},{\"name\":\"sentFriendRequests\",\"kind\":\"object\",\"type\":\"Friendship\",\"relationName\":\"sent_friendship_requests\"},{\"name\":\"receivedFriendRequests\",\"kind\":\"object\",\"type\":\"Friendship\",\"relationName\":\"received_friendship_requests\"},{\"name\":\"groups\",\"kind\":\"object\",\"type\":\"UserGroup\",\"relationName\":\"UserToUserGroup\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"ReviewToUser\"},{\"name\":\"reviewTags\",\"kind\":\"object\",\"type\":\"ReviewUserTag\",\"relationName\":\"ReviewUserTagToUser\"},{\"name\":\"userTags\",\"kind\":\"object\",\"type\":\"UserTag\",\"relationName\":\"UserToUserTag\"},{\"name\":\"gameStatuses\",\"kind\":\"object\",\"type\":\"GameStatus\",\"relationName\":\"GameStatusToUser\"},{\"name\":\"achievements\",\"kind\":\"object\",\"type\":\"AchievementUnlock\",\"relationName\":\"AchievementUnlockToUser\"},{\"name\":\"uploadedImages\",\"kind\":\"object\",\"type\":\"Image\",\"relationName\":\"user_uploaded_images\"},{\"name\":\"ReviewComment\",\"kind\":\"object\",\"type\":\"ReviewComment\",\"relationName\":\"ReviewCommentToUser\"},{\"name\":\"GameUser\",\"kind\":\"object\",\"type\":\"GameUser\",\"relationName\":\"GameUserToUser\"}],\"dbName\":null},\"Game\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"releaseDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"coverImageId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"coverImage\",\"kind\":\"object\",\"type\":\"Image\",\"relationName\":\"GameToImage\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"GameToReview\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"GameUser\",\"relationName\":\"GameToGameUser\"},{\"name\":\"favouritedBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"favouritedGames\"},{\"name\":\"genres\",\"kind\":\"object\",\"type\":\"Genre\",\"relationName\":\"game_genres\"},{\"name\":\"platforms\",\"kind\":\"object\",\"type\":\"Platform\",\"relationName\":\"game_platforms\"},{\"name\":\"tags\",\"kind\":\"object\",\"type\":\"GameTag\",\"relationName\":\"GameToGameTag\"},{\"name\":\"statuses\",\"kind\":\"object\",\"type\":\"GameStatus\",\"relationName\":\"game_statuses\"},{\"name\":\"developers\",\"kind\":\"object\",\"type\":\"Developer\",\"relationName\":\"game_developers\"},{\"name\":\"publishers\",\"kind\":\"object\",\"type\":\"Publisher\",\"relationName\":\"game_publishers\"},{\"name\":\"images\",\"kind\":\"object\",\"type\":\"GameImage\",\"relationName\":\"GameToGameImage\"},{\"name\":\"achievements\",\"kind\":\"object\",\"type\":\"Achievement\",\"relationName\":\"AchievementToGame\"},{\"name\":\"User\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"GameToUser\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null},\"Image\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"checksum\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"width\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"height\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"uploadedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"uploadedById\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"uploadedBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"user_uploaded_images\"},{\"name\":\"games\",\"kind\":\"object\",\"type\":\"Game\",\"relationName\":\"GameToImage\"},{\"name\":\"User\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ImageToUser\"}],\"dbName\":null},\"Review\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReviewToUser\"},{\"name\":\"gameId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"game\",\"kind\":\"object\",\"type\":\"Game\",\"relationName\":\"GameToReview\"},{\"name\":\"tags\",\"kind\":\"object\",\"type\":\"ReviewUserTag\",\"relationName\":\"ReviewToReviewUserTag\"},{\"name\":\"comments\",\"kind\":\"object\",\"type\":\"ReviewComment\",\"relationName\":\"ReviewToReviewComment\"}],\"dbName\":null},\"ReviewComment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"reviewId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"review\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"ReviewToReviewComment\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReviewCommentToUser\"}],\"dbName\":null},\"GameUser\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"gameId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"progress\",\"kind\":\"enum\",\"type\":\"ProgressStatus\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"GameUserToUser\"},{\"name\":\"game\",\"kind\":\"object\",\"type\":\"Game\",\"relationName\":\"GameToGameUser\"}],\"dbName\":null},\"GameStatus\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"GameStatusType\"},{\"name\":\"games\",\"kind\":\"object\",\"type\":\"Game\",\"relationName\":\"game_statuses\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"GameStatusToUser\"}],\"dbName\":null},\"UserTag\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"label\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserTag\"}],\"dbName\":null},\"GameTag\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"label\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"games\",\"kind\":\"object\",\"type\":\"Game\",\"relationName\":\"GameToGameTag\"}],\"dbName\":null},\"ReviewUserTag\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"label\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reviewId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"review\",\"kind\":\"object\",\"type\":\"Review\",\"relationName\":\"ReviewToReviewUserTag\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReviewUserTagToUser\"}],\"dbName\":null},\"Developer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"games\",\"kind\":\"object\",\"type\":\"Game\",\"relationName\":\"game_developers\"}],\"dbName\":null},\"Publisher\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"games\",\"kind\":\"object\",\"type\":\"Game\",\"relationName\":\"game_publishers\"}],\"dbName\":null},\"GameImage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gameId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"game\",\"kind\":\"object\",\"type\":\"Game\",\"relationName\":\"GameToGameImage\"}],\"dbName\":null},\"Achievement\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gameId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"game\",\"kind\":\"object\",\"type\":\"Game\",\"relationName\":\"AchievementToGame\"},{\"name\":\"unlocks\",\"kind\":\"object\",\"type\":\"AchievementUnlock\",\"relationName\":\"AchievementToAchievementUnlock\"}],\"dbName\":null},\"AchievementUnlock\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unlockedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AchievementUnlockToUser\"},{\"name\":\"achievementId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"achievement\",\"kind\":\"object\",\"type\":\"Achievement\",\"relationName\":\"AchievementToAchievementUnlock\"}],\"dbName\":null},\"EmailChange\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"EmailChangeToUser\"},{\"name\":\"newEmail\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"EmailVerification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"EmailVerificationToUser\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"PasswordReset\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PasswordResetToUser\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Friendship\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"senderId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"receiverId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"FriendshipStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"sender\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"sent_friendship_requests\"},{\"name\":\"receiver\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"received_friendship_requests\"}],\"dbName\":null},\"UserGroup\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserGroup\"}],\"dbName\":null},\"Genre\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"games\",\"kind\":\"object\",\"type\":\"Game\",\"relationName\":\"game_genres\"}],\"dbName\":null},\"Platform\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"games\",\"kind\":\"object\",\"type\":\"Game\",\"relationName\":\"game_platforms\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = undefined
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

