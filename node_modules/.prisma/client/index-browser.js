
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  passwordHash: 'passwordHash',
  googleId: 'googleId',
  displayName: 'displayName',
  profilePictureId: 'profilePictureId',
  emailVerified: 'emailVerified',
  birthDate: 'birthDate',
  registrationDate: 'registrationDate'
};

exports.Prisma.GameScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  releaseDate: 'releaseDate',
  coverImageId: 'coverImageId',
  userId: 'userId'
};

exports.Prisma.ImageScalarFieldEnum = {
  id: 'id',
  url: 'url',
  checksum: 'checksum',
  width: 'width',
  height: 'height',
  uploadedAt: 'uploadedAt',
  uploadedById: 'uploadedById'
};

exports.Prisma.ReviewScalarFieldEnum = {
  id: 'id',
  rating: 'rating',
  content: 'content',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId',
  gameId: 'gameId'
};

exports.Prisma.ReviewCommentScalarFieldEnum = {
  id: 'id',
  content: 'content',
  createdAt: 'createdAt',
  reviewId: 'reviewId',
  userId: 'userId'
};

exports.Prisma.GameUserScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  gameId: 'gameId',
  progress: 'progress'
};

exports.Prisma.GameStatusScalarFieldEnum = {
  id: 'id',
  type: 'type',
  userId: 'userId'
};

exports.Prisma.UserTagScalarFieldEnum = {
  id: 'id',
  label: 'label'
};

exports.Prisma.GameTagScalarFieldEnum = {
  id: 'id',
  label: 'label'
};

exports.Prisma.ReviewUserTagScalarFieldEnum = {
  id: 'id',
  label: 'label',
  reviewId: 'reviewId',
  userId: 'userId'
};

exports.Prisma.DeveloperScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.PublisherScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.GameImageScalarFieldEnum = {
  id: 'id',
  url: 'url',
  gameId: 'gameId'
};

exports.Prisma.AchievementScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  gameId: 'gameId'
};

exports.Prisma.AchievementUnlockScalarFieldEnum = {
  id: 'id',
  unlockedAt: 'unlockedAt',
  userId: 'userId',
  achievementId: 'achievementId'
};

exports.Prisma.EmailChangeScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  newEmail: 'newEmail',
  token: 'token',
  createdAt: 'createdAt'
};

exports.Prisma.EmailVerificationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  token: 'token',
  createdAt: 'createdAt',
  expiresAt: 'expiresAt'
};

exports.Prisma.PasswordResetScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  token: 'token',
  createdAt: 'createdAt',
  expiresAt: 'expiresAt'
};

exports.Prisma.FriendshipScalarFieldEnum = {
  id: 'id',
  senderId: 'senderId',
  receiverId: 'receiverId',
  status: 'status',
  createdAt: 'createdAt'
};

exports.Prisma.UserGroupScalarFieldEnum = {
  id: 'id',
  name: 'name',
  role: 'role'
};

exports.Prisma.GenreScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.PlatformScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.ProgressStatus = exports.$Enums.ProgressStatus = {
  WISHLIST: 'WISHLIST',
  PLAYING: 'PLAYING',
  COMPLETED: 'COMPLETED',
  ON_HOLD: 'ON_HOLD',
  DROPPED: 'DROPPED',
  REPLAYING: 'REPLAYING'
};

exports.GameStatusType = exports.$Enums.GameStatusType = {
  UPCOMING: 'UPCOMING',
  TRENDING: 'TRENDING',
  TOP: 'TOP',
  CLASSIC: 'CLASSIC',
  NEW_RELEASE: 'NEW_RELEASE'
};

exports.FriendshipStatus = exports.$Enums.FriendshipStatus = {
  PENDING: 'PENDING',
  ACCEPTED: 'ACCEPTED',
  REJECTED: 'REJECTED',
  BLOCKED: 'BLOCKED'
};

exports.Prisma.ModelName = {
  User: 'User',
  Game: 'Game',
  Image: 'Image',
  Review: 'Review',
  ReviewComment: 'ReviewComment',
  GameUser: 'GameUser',
  GameStatus: 'GameStatus',
  UserTag: 'UserTag',
  GameTag: 'GameTag',
  ReviewUserTag: 'ReviewUserTag',
  Developer: 'Developer',
  Publisher: 'Publisher',
  GameImage: 'GameImage',
  Achievement: 'Achievement',
  AchievementUnlock: 'AchievementUnlock',
  EmailChange: 'EmailChange',
  EmailVerification: 'EmailVerification',
  PasswordReset: 'PasswordReset',
  Friendship: 'Friendship',
  UserGroup: 'UserGroup',
  Genre: 'Genre',
  Platform: 'Platform'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
